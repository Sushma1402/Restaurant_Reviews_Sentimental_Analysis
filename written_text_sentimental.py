# -*- coding: utf-8 -*-
"""Written_text_sentimental.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qEkzuc4gKdw4W-hVQ_R6K6Xaio3ni9kd
"""

# General Packages
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
plt.style.use('ggplot')

# NLP packages
import nltk
nltk.downloader.download('vader_lexicon')


#to store the new CSV file
OUTPUT_PATH = '/content/'

# read the data
zomato = pd.read_csv(r'/content/sentiment_analysis_output.csv')
zomato.head()
zomato.shape
# Remove not required columns
# zomato = zomato.drop(['Unnamed: 0'],axis=1)
# zomato = zomato.drop(['Restaurant_Name', 'Restaurant_rated','Review_Written_By'], axis=1)
# print(zomato)


# to know the datatypes
print('DATATYPES:\n',zomato.info())
# print(zomato.describe().transpose())


# Check the head function
print('FIRST ROWS OF DATAFRAME ARE:\n',zomato.head())


# # Check the nulls
print('How many NULLS are their in zomato Dataframe:\n',zomato.isnull().sum())

#--------------DATA PREPARATION--------------------------------

# replacing blanks in Written_Review with "-"
zomato["Written_Review"].fillna("-",inplace=True)
print(zomato)

# to see most of the reviews are what
# biased towards positive reviews
zomato.User_Rated_Restaurant = round(zomato['User_Rated_Restaurant'])
zomato.User_Rated_Restaurant
ax = zomato['User_Rated_Restaurant'].value_counts().sort_index().\
      plot(kind ='bar',title = 'Count of Reviews by stars',figsize=(10,5))
ax.set_xlabel('Review Stars')
plt.show()


# SentimentIntensityAnalyzer is used to get pos,neu,neg score of text
# this uses bag-of-words approach:1)Stopwords are removed 2)each word is scored and combined to a total score.
# takes all the words in a sentence and has a value either pos,neutral,negative for each of those words 
# and combines as math equation and to all words it will tell how pos,neg,neu that the statement is based on that words
# stopwords are the words that does not have pos,neu,neg meaning
from nltk.sentiment import SentimentIntensityAnalyzer
from tqdm.notebook import tqdm

# based on words it will tell what the sentiment is
sia = SentimentIntensityAnalyzer()

# run the polarity on the entire dataset
# compound is aggregation of po,neu,neg values ,represents how neg to pos it is
res = {}
for i,row in tqdm(zomato.iterrows(),total=len(zomato)):
  text = row['Written_Review']
  myid = row['Unnamed: 0']
  res[myid] = sia.polarity_scores(text)
res




# VADER = Valence Aware Dictionary and Entiment Reasoner)-Bag of Words approach
# store in pandas dataframe ,T to flip horizontally
vaders = pd.DataFrame(res).T
# merge to original dataframe
vaders = vaders.reset_index().rename(columns={'index':'Unnamed: 0'})
vaders = vaders.merge(zomato, how='left')
vaders
print('pos,neu,neg:\n',vaders)
# dowload the Data cleaned CSV
vaders.to_csv(OUTPUT_PATH + 'Dataset_pos_neu_neg.csv')

# plot vader
ax = sns.barplot(data=vaders,x= 'User_Rated_Restaurant',y='compound')
ax.set_title('Compound Rated by Zomato Star Review')
plt.show()

# plot user rated with respect to positives
sns.barplot(data=vaders,x='User_Rated_Restaurant',y = 'pos')

# plot user rated respect to pos,neg,neu
fig, axs = plt.subplots(1,3,figsize=(12,3))
sns.barplot(data=vaders,x='User_Rated_Restaurant',y = 'pos',ax=axs[0])
sns.barplot(data=vaders,x='User_Rated_Restaurant',y = 'neu',ax=axs[1])
sns.barplot(data=vaders,x='User_Rated_Restaurant',y = 'neg',ax=axs[2])
axs[0].set_title('Positive')
axs[1].set_title('Neutral')
axs[2].set_title('Negative')
plt.tight_layout()
plt.show()



